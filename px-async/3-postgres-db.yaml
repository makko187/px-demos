kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
    name: px-postgres-sc
    namespace: demo
provisioner: kubernetes.io/portworx-volume
parameters:
   repl: "2"
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate

---   
##### Portworx persistent volume claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   name: postgres-data
   namespace: demo
   labels:
     app: postgres
spec:
   storageClassName: px-postgres-sc
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 5Gi
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
  namespace: demo
data:
  EXAMPLE_DB_HOST: postgres://postgres@postgres/example?sslmode=disable
  EXAMPLE_DB_KIND: postgres
  PGDATA: /var/lib/postgresql/data/pgdata
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: admin123

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgre
  namespace: demo
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: "postgres:10.1"
        name: postgres
        envFrom:
        - configMapRef:
            name: example-config
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
---

apiVersion: v1
kind: Service
metadata:
  name: pg-service
  namespace: demo
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
